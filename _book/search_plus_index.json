{"./":{"url":"./","title":"序言","keywords":"","body":"序言 console.log('Hello World'); public static String main(String[] args) { return \"Hello World!\"; } Copyright © 张喜硕. all right reserved，powered by Gitbook修订时间： 2019-12-18 13:05:16 "},"angular/":{"url":"angular/","title":"Angular","keywords":"","body":"Copyright © 张喜硕. all right reserved，powered by Gitbook修订时间： 2019-12-19 15:04:31 "},"angular/bootstrap/":{"url":"angular/bootstrap/","title":"启动过程","keywords":"","body":"问题描述 在软件开发越来越工程化的时代，雨后春笋般的开发工具使得开发越来越自动化，越来越简单。 使用Angular CLI，我们可以通过如下命令快速初始化一个简单的Angular应用并启动。 ng new boot ng serve 打开浏览器，访问http://127.0.0.1:4200，即访问到初始化的Angular应用。 用WebStorm打开项目，src文件夹下的文件众多，让人眼花缭乱，那究竟，一个Angular应用是怎么启动的呢？ 启动 main.ts文件负责整个Angular应用的启动。 打开main.ts，找到如下代码： platformBrowserDynamic().bootstrapModule(AppModule) .catch(err => console.error(err)); 调用从@angular/platform-browser-dynamic包中导入的platformBrowserDynamic方法，该方法声明Angular应用在浏览器(Browser)环境中启动。因为Angular能被应用在JavaScript环境中，而不仅仅是浏览器。 import { platformBrowserDynamic } from '@angular/platform-browser-dynamic'; 查看该方法的声明，其返回值类型为PlatformRef，即平台引用。 export declare const platformBrowserDynamic: (extraProviders?: StaticProvider[] | undefined) => PlatformRef; 初步猜想，调用platformBrowserDynamic方法，返回了适用于浏览器平台的PlatformRef对象，可能调用其他方法，返回的PlatformRef对象适用于其他平台。 再调用PlatformRef对象的bootstrapModule方法，启动AppModule模块。 .bootstrapModule(AppModule) 也就是说，AppModule是当前程序的入口模块/根模块。 再去看AppModule模块，@NgModule注解中bootstrap声明了该模块中需要启动的组件，此处为AppComponent。 @NgModule({ declarations: [ AppComponent ], imports: [ BrowserModule ], providers: [], bootstrap: [AppComponent] }) export class AppModule { } Angular继续编译组件AppComponent。 @Component({ selector: 'app-root', templateUrl: './app.component.html', styleUrls: ['./app.component.css'] }) export class AppComponent { title = 'boot'; } 根据组件中声明的app-root选择器，去index.html中编译标签。 bootstrap中声明的启动组件在模块加载时首先编译，根据其选择器去匹配index.html中的标签，如果匹配失败，会出现选择器不匹配错误。 ERROR Error: The selector \"app-root\" did not match any elements 所以如果在index.html中有多个根标签需要编译的话，完全可以设计多个bootstrap组件。 bootstrap: [AppComponent, App2Component] 如果当index.html有多个标签匹配的时候。 Angular只会编译第一个匹配的标签。 创建AppComponent，执行组件，其组件内可能也用到了其他组件，类似这样，Angular会继续进行编译。 所以，AppComponent组件的创建触发一系列组件的创建并形成组件树。 总之，Angular从根模块的根组件开始编译整个组件树从而启动整个应用。 Copyright © 张喜硕. all right reserved，powered by Gitbook修订时间： 2019-12-18 13:05:16 "},"network/":{"url":"network/","title":"网络","keywords":"","body":"Copyright © 张喜硕. all right reserved，powered by Gitbook修订时间： 2019-12-19 15:04:39 "}}